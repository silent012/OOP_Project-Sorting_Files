### YamlMime:ManagedReference
items:
- uid: FileSorter.FileManager
  commentId: T:FileSorter.FileManager
  id: FileManager
  parent: FileSorter
  children:
  - FileSorter.FileManager.GetInstance
  - FileSorter.FileManager.ManageFiles(System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: FileManager
  nameWithType: FileManager
  fullName: FileSorter.FileManager
  type: Class
  source:
    remote:
      path: FileSorter/FileSorter/FileManager.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: FileManager
    path: FileManager.cs
    startLine: 4
  assemblies:
  - FileSorter
  namespace: FileSorter
  syntax:
    content: public sealed class FileManager
    content.vb: Public NotInheritable Class FileManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: FileSorter.FileManager.GetInstance
  commentId: M:FileSorter.FileManager.GetInstance
  id: GetInstance
  parent: FileSorter.FileManager
  langs:
  - csharp
  - vb
  name: GetInstance()
  nameWithType: FileManager.GetInstance()
  fullName: FileSorter.FileManager.GetInstance()
  type: Method
  source:
    remote:
      path: FileSorter/FileSorter/FileManager.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: GetInstance
    path: FileManager.cs
    startLine: 11
  assemblies:
  - FileSorter
  namespace: FileSorter
  syntax:
    content: public static FileManager GetInstance()
    return:
      type: FileSorter.FileManager
    content.vb: Public Shared Function GetInstance As FileManager
  overload: FileSorter.FileManager.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FileSorter.FileManager.ManageFiles(System.String,System.String,System.String)
  commentId: M:FileSorter.FileManager.ManageFiles(System.String,System.String,System.String)
  id: ManageFiles(System.String,System.String,System.String)
  parent: FileSorter.FileManager
  langs:
  - csharp
  - vb
  name: ManageFiles(String, String, String)
  nameWithType: FileManager.ManageFiles(String, String, String)
  fullName: FileSorter.FileManager.ManageFiles(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: FileSorter/FileSorter/FileManager.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: ManageFiles
    path: FileManager.cs
    startLine: 26
  assemblies:
  - FileSorter
  namespace: FileSorter
  summary: "\nChecks if the directory exists, if not - creates it. Then moves the file to the directory keeping file`s original name.\n"
  example: []
  syntax:
    content: public void ManageFiles(string folderName, string pathOfDirectory, string fileName)
    parameters:
    - id: folderName
      type: System.String
      description: ''
    - id: pathOfDirectory
      type: System.String
      description: ''
    - id: fileName
      type: System.String
      description: ''
    content.vb: Public Sub ManageFiles(folderName As String, pathOfDirectory As String, fileName As String)
  overload: FileSorter.FileManager.ManageFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FileSorter
  commentId: N:FileSorter
  name: FileSorter
  nameWithType: FileSorter
  fullName: FileSorter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FileSorter.FileManager.GetInstance*
  commentId: Overload:FileSorter.FileManager.GetInstance
  name: GetInstance
  nameWithType: FileManager.GetInstance
  fullName: FileSorter.FileManager.GetInstance
- uid: FileSorter.FileManager
  commentId: T:FileSorter.FileManager
  parent: FileSorter
  name: FileManager
  nameWithType: FileManager
  fullName: FileSorter.FileManager
- uid: FileSorter.FileManager.ManageFiles*
  commentId: Overload:FileSorter.FileManager.ManageFiles
  name: ManageFiles
  nameWithType: FileManager.ManageFiles
  fullName: FileSorter.FileManager.ManageFiles
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
