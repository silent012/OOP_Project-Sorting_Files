### YamlMime:ManagedReference
items:
- uid: FileSorter.DateService
  commentId: T:FileSorter.DateService
  id: DateService
  parent: FileSorter
  children:
  - FileSorter.DateService.DAGreaterOrEqual(System.Int32,System.String)
  - FileSorter.DateService.DaysAgo(System.Int32,System.String)
  - FileSorter.DateService.GetInstance
  - FileSorter.DateService.MAGreaterOrEqual(System.Int32,System.String)
  - FileSorter.DateService.MonthsAgo(System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: DateService
  nameWithType: DateService
  fullName: FileSorter.DateService
  type: Class
  source:
    remote:
      path: FileSorter/FileSorter/DateService.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: DateService
    path: DateService.cs
    startLine: 5
  assemblies:
  - FileSorter
  namespace: FileSorter
  syntax:
    content: public sealed class DateService
    content.vb: Public NotInheritable Class DateService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: FileSorter.DateService.GetInstance
  commentId: M:FileSorter.DateService.GetInstance
  id: GetInstance
  parent: FileSorter.DateService
  langs:
  - csharp
  - vb
  name: GetInstance()
  nameWithType: DateService.GetInstance()
  fullName: FileSorter.DateService.GetInstance()
  type: Method
  source:
    remote:
      path: FileSorter/FileSorter/DateService.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: GetInstance
    path: DateService.cs
    startLine: 14
  assemblies:
  - FileSorter
  namespace: FileSorter
  syntax:
    content: public static DateService GetInstance()
    return:
      type: FileSorter.DateService
    content.vb: Public Shared Function GetInstance As DateService
  overload: FileSorter.DateService.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FileSorter.DateService.MonthsAgo(System.Int32,System.String)
  commentId: M:FileSorter.DateService.MonthsAgo(System.Int32,System.String)
  id: MonthsAgo(System.Int32,System.String)
  parent: FileSorter.DateService
  langs:
  - csharp
  - vb
  name: MonthsAgo(Int32, String)
  nameWithType: DateService.MonthsAgo(Int32, String)
  fullName: FileSorter.DateService.MonthsAgo(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: FileSorter/FileSorter/DateService.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: MonthsAgo
    path: DateService.cs
    startLine: 29
  assemblies:
  - FileSorter
  namespace: FileSorter
  summary: "\nMonthsAgo checks if last access time of given file is less than given months.\n"
  example: []
  syntax:
    content: public bool MonthsAgo(int months, string file)
    parameters:
    - id: months
      type: System.Int32
      description: ''
    - id: file
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: True or false.
    content.vb: Public Function MonthsAgo(months As Integer, file As String) As Boolean
  overload: FileSorter.DateService.MonthsAgo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FileSorter.DateService.DaysAgo(System.Int32,System.String)
  commentId: M:FileSorter.DateService.DaysAgo(System.Int32,System.String)
  id: DaysAgo(System.Int32,System.String)
  parent: FileSorter.DateService
  langs:
  - csharp
  - vb
  name: DaysAgo(Int32, String)
  nameWithType: DateService.DaysAgo(Int32, String)
  fullName: FileSorter.DateService.DaysAgo(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: FileSorter/FileSorter/DateService.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: DaysAgo
    path: DateService.cs
    startLine: 43
  assemblies:
  - FileSorter
  namespace: FileSorter
  summary: "\nDaysAgo checks if last access time of given file is less than given days.\n"
  example: []
  syntax:
    content: public bool DaysAgo(int days, string file)
    parameters:
    - id: days
      type: System.Int32
      description: ''
    - id: file
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: True or false.
    content.vb: Public Function DaysAgo(days As Integer, file As String) As Boolean
  overload: FileSorter.DateService.DaysAgo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FileSorter.DateService.MAGreaterOrEqual(System.Int32,System.String)
  commentId: M:FileSorter.DateService.MAGreaterOrEqual(System.Int32,System.String)
  id: MAGreaterOrEqual(System.Int32,System.String)
  parent: FileSorter.DateService
  langs:
  - csharp
  - vb
  name: MAGreaterOrEqual(Int32, String)
  nameWithType: DateService.MAGreaterOrEqual(Int32, String)
  fullName: FileSorter.DateService.MAGreaterOrEqual(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: FileSorter/FileSorter/DateService.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: MAGreaterOrEqual
    path: DateService.cs
    startLine: 57
  assemblies:
  - FileSorter
  namespace: FileSorter
  summary: "\nSecondary method to support MonthsAgo. Checks if last access time of given file is greater or equal given months.\n"
  example: []
  syntax:
    content: public bool MAGreaterOrEqual(int months, string file)
    parameters:
    - id: months
      type: System.Int32
      description: ''
    - id: file
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: True or false.
    content.vb: Public Function MAGreaterOrEqual(months As Integer, file As String) As Boolean
  overload: FileSorter.DateService.MAGreaterOrEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FileSorter.DateService.DAGreaterOrEqual(System.Int32,System.String)
  commentId: M:FileSorter.DateService.DAGreaterOrEqual(System.Int32,System.String)
  id: DAGreaterOrEqual(System.Int32,System.String)
  parent: FileSorter.DateService
  langs:
  - csharp
  - vb
  name: DAGreaterOrEqual(Int32, String)
  nameWithType: DateService.DAGreaterOrEqual(Int32, String)
  fullName: FileSorter.DateService.DAGreaterOrEqual(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: FileSorter/FileSorter/DateService.cs
      branch: master
      repo: https://github.com/silent012/OOP_Project-Sorting_Files
    id: DAGreaterOrEqual
    path: DateService.cs
    startLine: 71
  assemblies:
  - FileSorter
  namespace: FileSorter
  summary: "\nSecondary method to support DaysAgo. Checks if last access time of given file is greater or equal given days.\n"
  example: []
  syntax:
    content: public bool DAGreaterOrEqual(int days, string file)
    parameters:
    - id: days
      type: System.Int32
      description: ''
    - id: file
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function DAGreaterOrEqual(days As Integer, file As String) As Boolean
  overload: FileSorter.DateService.DAGreaterOrEqual*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FileSorter
  commentId: N:FileSorter
  name: FileSorter
  nameWithType: FileSorter
  fullName: FileSorter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FileSorter.DateService.GetInstance*
  commentId: Overload:FileSorter.DateService.GetInstance
  name: GetInstance
  nameWithType: DateService.GetInstance
  fullName: FileSorter.DateService.GetInstance
- uid: FileSorter.DateService
  commentId: T:FileSorter.DateService
  parent: FileSorter
  name: DateService
  nameWithType: DateService
  fullName: FileSorter.DateService
- uid: FileSorter.DateService.MonthsAgo*
  commentId: Overload:FileSorter.DateService.MonthsAgo
  name: MonthsAgo
  nameWithType: DateService.MonthsAgo
  fullName: FileSorter.DateService.MonthsAgo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FileSorter.DateService.DaysAgo*
  commentId: Overload:FileSorter.DateService.DaysAgo
  name: DaysAgo
  nameWithType: DateService.DaysAgo
  fullName: FileSorter.DateService.DaysAgo
- uid: FileSorter.DateService.MAGreaterOrEqual*
  commentId: Overload:FileSorter.DateService.MAGreaterOrEqual
  name: MAGreaterOrEqual
  nameWithType: DateService.MAGreaterOrEqual
  fullName: FileSorter.DateService.MAGreaterOrEqual
- uid: FileSorter.DateService.DAGreaterOrEqual*
  commentId: Overload:FileSorter.DateService.DAGreaterOrEqual
  name: DAGreaterOrEqual
  nameWithType: DateService.DAGreaterOrEqual
  fullName: FileSorter.DateService.DAGreaterOrEqual
